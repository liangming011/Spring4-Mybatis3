<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

    <!--<display-name>Archetype Created Web Application</display-name>-->

    <!--&lt;!&ndash;-->
       <!--Spring4.0已全面支持Servlet3.0, 因此也可以采用编程式的配置方式，这是传统的配置方式！！！！。-->
       <!--com.lm.springmvc.config.SpringMVCApplicationinitializer，新型的配置方式！！！！！。-->
   <!--&ndash;&gt;-->

    <!--&lt;!&ndash;在这里，"Web层"Spring容器将作为＂业务层"Spring容器的子容器， 即"Web层” 容器可以引用“业务层“容器的Bean,-->
        <!--而“业务层＂容器却访问不到"Web层＂容器的Bean。&ndash;&gt;-->

    <!--&lt;!&ndash; =====================Spring 配置================= &ndash;&gt;-->
    <!--&lt;!&ndash;声明DispatcherServlet，加载配置文件，启动"Web层"的Spring容器。&ndash;&gt;-->
    <!--&lt;!&ndash; 一个 web.xml 可以配置多个DispatcherServlet , 通过其 <servlet-mapping>配置，让每个DispatcherServlet处理不同的请求 。&ndash;&gt;-->
    <!--<servlet>-->
        <!--<servlet-name>springmvc1</servlet-name>-->
        <!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
        <!--&lt;!&ndash; 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml&ndash;&gt;-->
        <!--<init-param>-->
            <!--<param-name>contextConfigLocation</param-name>-->
            <!--&lt;!&ndash;SpringMVC配置文件&ndash;&gt;-->
            <!--<param-value>classpath:/webApplicationContext.xml</param-value>-->
        <!--</init-param>-->
        <!--&lt;!&ndash; 使系统在启动时装在servlet而不是第一个servlet被访问 &ndash;&gt;-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!--&lt;!&ndash;名为DispatcherServlet匹配的的URL模式或格式。即所有带html后缀的HTTP请求都会被DispatcherServlet截获并处理&ndash;&gt;-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>springmvc1</servlet-name>-->
        <!--<url-pattern>*.html</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--&lt;!&ndash; 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下（多个用逗号分隔）业务层和持久层的Spring配置文件，这些配置文件被父类Spring容器使用&ndash;&gt;-->
    <!--<context-param>-->
        <!--<param-name>contextConfigLocation</param-name>-->
        <!--&lt;!&ndash;Spring业务层配置文件&ndash;&gt;-->
        <!--<param-value>classpath:/applicationContext.xml</param-value>-->
    <!--</context-param>-->
    <!--&lt;!&ndash; ContextLoaderListener是一个ServletContextListener, 它通过contextConfigLocation参数所指定的Spring配置文件启动”业务层＂的Spring容器 &ndash;&gt;-->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->


    <!--&lt;!&ndash; 第一个过滤器 过滤字符集 &ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>characterEncodingFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>encoding</param-name>-->
            <!--<param-value>UTF-8</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>forceEncoding</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--&lt;!&ndash; 过滤器过滤的url格式 &ndash;&gt;-->
    <!--<filter-mapping>-->
        <!--<filter-name>characterEncodingFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
        <!--<servlet-name>springmvc1</servlet-name>-->
    <!--</filter-mapping>-->

    <!--&lt;!&ndash; 第二个过滤器 过滤session请求 页面跳转时检查session有没有失效&ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>sessionValidate</filter-name>-->
        <!--<filter-class>com.lm.springmvc.config.SessionValidateFilter</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>uri</param-name>-->
            <!--<param-value>/deal/</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>loginUrl</param-name>-->
            <!--<param-value>/login</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>backToUrl</param-name>-->
            <!--<param-value>/</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>debug</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--&lt;!&ndash; 把需要进行check登陆的请求放到此处 &ndash;&gt;-->
    <!--<filter-mapping>-->
        <!--<filter-name>sessionValidate</filter-name>-->
        <!--<url-pattern>/deal/*</url-pattern>-->
        <!--<servlet-name>springmvc1</servlet-name>-->
    <!--</filter-mapping>-->

    <!--&lt;!&ndash; 配置session过期时间120分钟 &ndash;&gt;-->
    <!--<session-config>-->
        <!--<session-timeout>120</session-timeout>-->
    <!--</session-config>-->

    <!--&lt;!&ndash; 返回错误编码对应的错误页面 &ndash;&gt;-->
    <!--<error-page>-->
        <!--<error-code>404</error-code>-->
        <!--<location>/404.jsp</location>-->
    <!--</error-page>-->

</web-app>
